<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">


	<!--shiro主过滤器的配置，这里的名字和web中的要对应 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- 集成上安全管理器 -->
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/worker/login" />
		<property name="successUrl" value="/worker/success"/>
		<property name="unauthorizedUrl" value="/worker/unauthorized" />
		<!--<property name="filters">
			<map>
				<entry key="authc" >
					<bean class="com.hrg.authority.shiro.SimpleFormAuthenticationFilter"/>
				</entry>
				<entry key="perm">
					<bean class="com.hrg.authority.shiro.PermissionAuthorizationFilter"/>
				</entry>
			</map>
		</property>-->
		<!--<property name="filterChainDefinitions">
			<value>
				/jsp/worker_list.jsp* = anon
				/jsp/content_case_add.jsp* = anon
				/jsp/content_case_list.jsp* = anon
				/worker/hellow = anon
				/worker/logout = anon
				/css/*.css* = anon
				/css/*.* = anon
				/css/default/images/*.* = anon
				/js/*.js* = anon
				/img/*.jpg* = anon
				/fonts/* =anon
				/static/*/*/*.jpg* = anon

				&lt;!&ndash; 所有路径都需要认证 &ndash;&gt;
				/** = authc
			</value>
		</property>-->
	</bean>
	<!--表单认证过滤器-->
	<bean id="formAuthenticationFilter" class="com.hrg.authority.shiro.SimpleFormAuthenticationFilter">
		<property name="usernameParam" value="username" />
		<property name="passwordParam" value="password" />
	</bean>
	<!-- 自定义ShiroRealm -->
	<bean id="shiroRealm" class="com.hrg.authority.shiro.realm.UsernameAndPasswordRealm">
		<property name="cacheManager" ref="cacheManager"/>
	</bean>

	<bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager"/>

	<!--安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- 集成上数据访问的Realm -->
		<property name="realm" ref="shiroRealm" />

		<!-- sessionManager -->
		<property name="sessionManager" ref="sessionManager" />

		<!-- 集成上缓存管理器 -->
		<property name="cacheManager" ref="shiroRedisCacheManager" />
	</bean>

	<!-- 开启shiro注解支持 -->
	<bean
			class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>

	<!-- sessionManager -->
	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="sessionDAO" ref="shiroRedisSessionDao" />

		<!-- sessionIdCookie的实现,用于重写覆盖容器默认的JSESSIONID -->
		<property name="sessionIdCookie" ref="sharesession" />
		<!-- 定时检查失效的session -->
		<property name="sessionValidationSchedulerEnabled" value="true" />

	</bean>

	<!-- redisManager -->
	<bean id="redisManager" class="com.hrg.authority.redis.RedisManager">
		<property name="host" value="${redis.host}" />
		<property name="port" value="${redis.port}" />
		<property name="expire" value="${redis.expire}" />
	</bean>

	<!-- redisSessionDAO -->
	<bean id="shiroRedisSessionDao" class="com.hrg.authority.dao.ShiroRedisSessionDao">
		<property name="redisManager" ref="redisManager" />
	</bean>

	<!-- sessionIdCookie的实现,用于重写覆盖容器默认的JSESSIONID -->
	<bean id="sharesession" class="org.apache.shiro.web.servlet.SimpleCookie">
		<!-- cookie的name,对应的默认是 JSESSIONID -->
		<constructor-arg name="name" value="SHAREJSESSIONID" />
		<!-- jsessionId的path为 / 用于多个系统共享jsessionId -->
		<property name="path" value="/" />
		<property name="httpOnly" value="true" />
	</bean>

	<!-- 缓存管理器 -->
	<bean id="shiroRedisCacheManager" class="com.hrg.authority.redis.RedisCacheManager">
		<property name="redisManager" ref="redisManager" />
	</bean>

	<!--保证shiro内部生命周期的bean被执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

</beans>